@{
    ViewBag.Title = "DataSourceAjaxOptions";
}
@Styles.Render("~/Scripts/DataTables-1.9.4/media/css/demo_table.css")
<h2>dataSource - Ajax Options</h2>
<p>
The dataSource property can be set to an object specifying jQuery ajax options. This is useful if you want to override the default ajax options.
</p>
<p>
In the example below, the dataSource for the States level is set to use &quot;GET&quot; instead of &quot;POST&quot;.
</p>
<p>
The County level dataSource is configured to call a web service that returns XML instead of JSON using GET instead of PUT.
In addition, this level also uses an <code>onAjaxSuccess</code> handler to parse the XML results.
</p>
<p>
<code>onAjaxSuccess</code> is a function that takes one parameter that data returned by the web service query.
</p>
<table id="example1" style="width:100%"></table>
<script type="text/javascript">
    $(function () {
        $('#example1').nestedDataTables({
            dataSource: {
                type: 'GET',
                url: "@Url.Action("GetStates")"
            },
            columns:
                [
                    { mDataProp: "StateID", sTitle: "State", nestedDataTables: { key: true } },
                    { mDataProp: "StateName", sTitle: "State Name" },
                    { mDataProp: "Population", sTitle: "Population" }
                ],
            nestedDataTable:
                {
                    dataSource:{
                        type: 'GET',
                        url: "@Url.Action("GetCountiesXml")",
                        dataType: 'xml'
                    },
                    onAjaxSuccess: function (x) {
                        var rc = [];
                        $(x).find('CountyModel').each(function () {
                            var rcnew = {};
                            var $t = $(this);
                            rcnew.StateID = $t.find("StateID").text();
                            rcnew.Name = $t.find("Name").text();
                            rcnew.AreaSqMi = $t.find("AreaSqMi").text();
                            rcnew.Population = $t.find("Population").text();
                            rcnew.WebUrl = $t.find("WebUrl").text();
                            rc.push(rcnew);
                        });

                        return rc;
                    },
                    columns:
                        [
                            { mDataProp: "StateID", bVisible: false, nestedDataTables: { key: true } },
                            { mDataProp: "Name", sTitle: "County Name", nestedDataTables: { key: true, paramName: "CountyName" } },
                            { mDataProp: "AreaSqMi", sTitle: "Area Sq/Mi" },
                            { mDataProp: "Population", sTitle: "Population" },
                            { mDataProp: "WebUrl", sTitle: "Web Page" }
                        ],
                    nestedDataTable:
                        {
                            dataSource: "@Url.Action("GetCities")",
                            columns:
                                [
                                    { mDataProp: "Name", sTitle: "City Name" },
                                    { mDataProp: "AreaSqMi", sTitle: "Area Sq/Mi" },
                                    { mDataProp: "Population", sTitle: "Population" },
                                    { mDataProp: "WebUrl", sTitle: "Web Page" }
                                ],
                            nestedDataTable: null
                        }
                }
        });
    });
</script>
<h4>Code:</h4>
<pre>
$('#example1').nestedDataTables({
    dataSource: {
        type: 'GET',
        url: "@Url.Action("GetStates")",
        contentType: 'application/json; charset=utf-8',
        dataType: 'json',
    },
    columns:
        [
            { mDataProp: "StateID", sTitle: "State", nestedDataTables: { key: true } },
            { mDataProp: "StateName", sTitle: "State Name" },
            { mDataProp: "Population", sTitle: "Population" }
        ],
    nestedDataTable:
        {
            dataSource: "@Url.Action("GetCounties")",
            columns:
                [
                    { mDataProp: "StateID", bVisible: false, nestedDataTables: { key: true } },
                    { mDataProp: "Name", sTitle: "County Name", nestedDataTables: { key: true, paramName: "CountyName" } },
                    { mDataProp: "AreaSqMi", sTitle: "Area Sq/Mi" },
                    { mDataProp: "Population", sTitle: "Population" },
                    { mDataProp: "WebUrl", sTitle: "Web Page" }
                ],
            nestedDataTable:
                {
                    dataSource: "@Url.Action("GetCities")",
                    columns:
                        [
                            { mDataProp: "Name", sTitle: "City Name" },
                            { mDataProp: "AreaSqMi", sTitle: "Area Sq/Mi" },
                            { mDataProp: "Population", sTitle: "Population" },
                            { mDataProp: "WebUrl", sTitle: "Web Page" }
                        ],
                    nestedDataTable: null
                }
        }
});
</pre>
